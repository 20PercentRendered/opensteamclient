#include "errmsgutils.h"
#include <map>

std::map<EAppUpdateError, std::string> mapOfEAppUpdateErrors 
{
    {k_EAppErrorApplicationRunning, "Application is running"}, 
    {k_EAppErrorNoSubscription, "No subscription"}, 
    {k_EAppErrorCorruptContent, "Corrupt content"}, 
    {k_EAppErrorCorruptDepotCache, "Corrupt depot cache"}, 
    {k_EAppErrorCorruptUpdateFiles, "Corrupt update files"}, 
    {k_EAppErrorDependencyFailure, "Dependency failure"}, 
    {k_EAppErrorDiskReadFailure, "Disk read failure"}, 
    {k_EAppErrorDiskWriteFailure, "Disk write failure"}, 
    {k_EAppErrorInvalidApplicationConfiguration, "Invalid application configuration (most likely launch option too high)"}, 
    {k_EAppErrorInvalidContentConfiguration, "Invalid content configuration"}, 
    {k_EAppErrorInvalidFileSystem, "Invalid filesystem (unused?)"}, 
    {k_EAppErrorInvalidInstallPath, "Invalid install path"}, 
    {k_EAppErrorInvalidPlatform, "Invalid platform"}, 
    {k_EAppErrorMissingConfig, "Missing config"}, 
    {k_EAppErrorMissingExecutable, "Missing executable (wrong platform or missing depots)"}, 
    {k_EAppErrorMissingKey, "Missing key"},
    {k_EAppErrorMissingManifest, "Missing manifest"}, 
    {k_EAppErrorNoConnection, "No connection"},
    {k_EAppErrorNoConnectionToContentServers, "No connection to content servers"}, 
    {k_EAppErrorNone, "Success"},  
    {k_EAppErrorNotInstalled, "Not installed"}, 
    {k_EAppErrorNotReleased, "Not released"}, 
    {k_EAppErrorRegionRestricted, "Region restricted"}, 
    {k_EAppErrorStillBusy, "StillBusy"}, 
    {k_EAppErrorTimeout, "Timed out"}, 
    {k_EAppErrorUpdateRequired, "Update required"}, 
    {k_EAppErrorWaitingForDisk, "Waiting for disk"}, 
    {k_EAppUpdateErrorDownloadCorrupt, "Download corrupt"}, 
    {k_EAppUpdateErrorDownloadDisabled, "Downloads are disabled"}, 
    {k_EAppUpdateErrorOtherSessionPlaying, "Other session is playing"}, 
    {k_EAppUpdateErrorPurchasePending, "Purchase pending"}, 
    {k_EAppUpdateErrorSharedLibraryLocked, "Shared library locked"}, 
};

std::map<EResult, std::string> mapOfEResults
{
    {k_EResultNoResult, "No Result"},
    {k_EResultOK, "OK"},
    {k_EResultFailure, "Failure"},
    {k_EResultNoConnection, "No Connection"},
    {k_EResultInvalidPassword, "Invalid Password"},
    {k_EResultLoggedInElsewhere, "Logged In Elsewhere"},
    {k_EResultInvalidProtocol, "Invalid Protocol"},
    {k_EResultInvalidParameter, "Invalid Parameter"},
    {k_EResultFileNotFound, "File Not Found"},
    {k_EResultBusy, "Busy"},
    {k_EResultInvalidState, "Invalid State"},
    {k_EResultInvalidName, "Invalid Name"},
    {k_EResultInvalidEmail, "Invalid Email"},
    {k_EResultDuplicateName, "Duplicate Name"},
    {k_EResultAccessDenied, "Access Denied"},
    {k_EResultTimeout, "Timeout"},
    {k_EResultBanned, "Banned"},
    {k_EResultAccountNotFound, "Account Not Found"},
    {k_EResultInvalidSteamID, "Invalid Steam ID"},
    {k_EResultServiceUnavailable, "Service Unavailable"},
    {k_EResultNotLoggedOn, "Not Logged On"},
    {k_EResultPending, "Pending"},
    {k_EResultEncryptionFailure, "Encryption Failure"},
    {k_EResultInsufficientPrivilege, "Insufficient Privilege"},
    {k_EResultLimitExceeded, "Limit Exceeded"},
    {k_EResultRequestRevoked, "Request Revoked"},
    {k_EResultExpired, "Expired"},
    {k_EResultAlreadyRedeemed, "Already Redeemed"},
    {k_EResultDuplicatedRequest, "Duplicated Request"},
    {k_EResultAlreadyOwned, "Already Owned"},
    {k_EResultIPAddressNotFound, "IPAddress Not Found"},
    {k_EResultPersistenceFailed, "Persistence Failed"},
    {k_EResultLockingFailed, "Locking Failed"},
    {k_EResultSessionReplaced, "Session Replaced"},
    {k_EResultConnectionFailed, "Connection Failed"},
    {k_EResultHandshakeFailed, "Handshake Failed"},
    {k_EResultIOOperationFailed, "IOOperation Failed"},
    {k_EResultDisconnectedByRemoteHost, "Disconnected By Remote Host"},
    {k_EResultShoppingCartNotFound, "Shopping Cart Not Found"},
    {k_EResultBlocked, "Blocked"},
    {k_EResultIgnored, "Ignored"},
    {k_EResultNoMatch, "No Match"},
    {k_EResultAccountDisabled, "Account Disabled"},
    {k_EResultServiceReadOnly, "Service Read Only"},
    {k_EResultAccountNotFeatured, "Account Not Featured"},
    {k_EResultAdministratorOK, "Administrator OK"},
    {k_EResultContentVersion, "Content Version"},
    {k_EResultTryAnotherCM, "Try Another CM"},
    {k_EResultPasswordRequiredToKickSession, "Password Required To Kick Session"},
    {k_EResultAlreadyLoggedInElsewhere, "Already Logged In Elsewhere"},
    {k_EResultRequestSuspendedpaused, "Request Suspendedpaused"},
    {k_EResultRequestHasBeenCanceled, "Request Has Been Canceled"},
    {k_EResultCorruptedOrUnrecoverableDataError, "Corrupted Or Unrecoverable Data Error"},
    {k_EResultNotEnoughFreeDiskSpace, "Not Enough Free Disk Space"},
    {k_EResultRemoteCallFailed, "Remote Call Failed"},
    {k_EResultPasswordIsNotSet, "Password Is Not Set"},
    {k_EResultExternalAccountIsNotLinkedToASteamAccount, "External Account Is Not Linked To ASteam Account"},
    {k_EResultPSNTicketIsInvalid, "PSNTicket Is Invalid"},
    {k_EResultExternalAccountLinkedToAnotherSteamAccount, "External Account Linked To Another Steam Account"},
    {k_EResultRemoteFileConflict, "Remote File Conflict"},
    {k_EResultIllegalPassword, "Illegal Password"},
    {k_EResultSameAsPreviousValue, "Same As Previous Value"},
    {k_EResultAccountLogonDenied, "Account Logon Denied"},
    {k_EResultCannotUseOldPassword, "Cannot Use Old Password"},
    {k_EResultInvalidLoginAuthCode, "Invalid Login Auth Code"},
    {k_EResultAccountLogonDeniedNoMailSent, "Account Logon Denied No Mail Sent"},
    {k_EResultHardwareNotCapableOfIPT, "Hardware Not Capable Of IPT"},
    {k_EResultIPTInitError, "IPTInit Error"},
    {k_EResultOperationFailedDueToParentalControlRestrictionsForCurrentUser, "Operation Failed Due To Parental Control Restrictions For Current User"},
    {k_EResultFacebookQueryReturnedAnError, "Facebook Query Returned An Error"},
    {k_EResultExpiredLoginAuthCode, "Expired Login Auth Code"},
    {k_EResultIPLoginRestrictionFailed, "IPLogin Restriction Failed"},
    {k_EResultAccountLockedDown, "Account Locked Down"},
    {k_EResultAccountLogonDeniedVerifiedEmailRequired, "Account Logon Denied Verified Email Required"},
    {k_EResultNoMatchingURL, "No Matching URL"},
    {k_EResultBadResponse, "Bad Response"},
    {k_EResultPasswordReentryRequired, "Password Reentry Required"},
    {k_EResultValueIsOutOfRange, "Value Is Out Of Range"},
    {k_EResultUnexpectedError, "Unexpected Error"},
    {k_EResultFeatureDisabled, "Feature Disabled"},
    {k_EResultInvalidCEGSubmission, "Invalid CEGSubmission"},
    {k_EResultRestrictedDevice, "Restricted Device"},
    {k_EResultRegionLocked, "Region Locked"},
    {k_EResultRateLimitExceeded, "Rate Limit Exceeded"},
    {k_EResultAccountLogonDeniedNeedTwofactorCode, "Account Logon Denied Need Twofactor Code"},
    {k_EResultItemOrEntryHasBeenDeleted, "Item Or Entry Has Been Deleted"},
    {k_EResultTooManyLogonAttempts, "Too Many Logon Attempts"},
    {k_EResultTwofactorCodeMismatch, "Twofactor Code Mismatch"},
    {k_EResultTwofactorActivationCodeMismatch, "Twofactor Activation Code Mismatch"},
    {k_EResultAccountAssociatedWithMultiplePlayers, "Account Associated With Multiple Players"},
    {k_EResultNotModified, "Not Modified"},
    {k_EResultNoMobileDeviceAvailable, "No Mobile Device Available"},
    {k_EResultTimeIsOutOfSync, "Time Is Out Of Sync"},
    {k_EResultSMSCodeFailed, "SMSCode Failed"},
    {k_EResultTooManyAccountsAccessThisResource, "Too Many Accounts Access This Resource"},
    {k_EResultTooManyChangesToThisAccount, "Too Many Changes To This Account"},
    {k_EResultTooManyChangesToThisPhoneNumber, "Too Many Changes To This Phone Number"},
    {k_EResultYouMustRefundThisTransactionToWallet, "You Must Refund This Transaction To Wallet"},
    {k_EResultSendingOfAnEmailFailed, "Sending Of An Email Failed"},
    {k_EResultPurchaseNotYetSettled, "Purchase Not Yet Settled"},
    {k_EResultNeedsCaptcha, "Needs Captcha"},
    {k_EResultGameserverLoginTokenDenied, "Gameserver Login Token Denied"},
    {k_EResultGameserverLoginTokenOwnerDenied, "Gameserver Login Token Owner Denied"},
    {k_EResultInvalidItemType, "Invalid Item Type"},
    {k_EResultIPAddressBanned, "IPAddress Banned"},
    {k_EResultGameserverLoginTokenExpired, "Gameserver Login Token Expired"},
    {k_EResultInsufficientFunds, "Insufficient Funds"},
    {k_EResultTooManyPending, "Too Many Pending"},
    {k_EResultNoSiteLicensesFound, "No Site Licenses Found"},
    {k_EResultNetworkSendExceeded, "Network Send Exceeded"},
    {k_EResultAccountsNotFriends, "Accounts Not Friends"},
    {k_EResultLimitedUserAccount, "Limited User Account"},
    {k_EResultCantRemoveItem, "Cant Remove Item"},
    {k_EResultAccountHasBeenDeleted, "Account Has Been Deleted"},
    {k_EResultAccountHasAnExistingUserCancelledLicense, "Account Has An Existing User Cancelled License"},
    {k_EResultDeniedDueToCommunityCooldown, "Denied Due To Community Cooldown"},
    {k_EResultNoLauncherSpecified, "No Launcher Specified"},
    {k_EResultMustAgreeToSSA, "Must Agree To SSA"},
    {k_EResultClientNoLongerSupported, "Client No Longer Supported"},
    {k_EResultTheCurrentSteamRealmDoesNotMatchTheRequestedResource, "The Current Steam Realm Does Not Match The Requested Resource"},
    {k_EResultSignatureCheckFailed, "Signature Check Failed"},
    {k_EResultFailedToParseInput, "Failed To Parse Input"},
    {k_EResultNoVerifiedPhoneNumber, "No Verified Phone Number"},
    {k_EResultInsufficientBatteryCharge, "Insufficient Battery Charge"},
    {k_EResultChargerRequired, "Charger Required"},
    {k_EResultCachedCredentialIsInvalid, "Cached Credential Is Invalid"},
    {k_EResultPhoneNumberIsVoiceOverIP, "Phone Number Is Voice Over IP"},
};

std::string ErrMsgUtils::GetErrorMessageFromEAppUpdateError(EAppUpdateError error)
{
    auto errStr = mapOfEAppUpdateErrors[error];
    if (errStr.empty()) {
        return std::string("[EAppUpdateError ").append(std::to_string(error)).append("]");
    }
    return errStr;  
}

std::string ErrMsgUtils::GetErrorMessageFromEResult(EResult eResult) 
{
    auto errStr = mapOfEResults[eResult];
    if (errStr.empty()) {
        return std::string("[EResult ").append(std::to_string(eResult)).append("]");
    }
    return errStr;  
}